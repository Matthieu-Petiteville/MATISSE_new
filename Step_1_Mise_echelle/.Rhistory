mutate(taux_AID=ifelse(is.infinite(taux_AID),0,taux_AID))%>%
mutate(taux_IR=ifelse(is.na(taux_IR),0,taux_IR))%>%
mutate(taux_IR=ifelse(is.infinite(taux_IR),0,taux_IR))
menage_echelle%>%filter(taux_IR==0 &impot_revenu>0 )%>%select(ident_men)
menage_echelle%>%filter(taux_AID==0 &AID>0 )%>%select(ident_men)
#exemple du ménage 2548, AID=733 en 2010 mais RDBAI=0, donc taux_AID=0, on garde le même montant d'AID qu'en 2010.
# same for menage 10828
menage_echelle <-
menage_echelle %>%
mutate(impot_revenu=ifelse(taux_IR==0,impot_revenu,taux_IR*RDBAI))%>%
mutate(AID=ifelse(taux_AID==0,AID,taux_AID*RDBAI))
menage_echelle$RDB <- menage_echelle$RDBAI - rowSums(menage_echelle[c("impot_revenu","AID")])
save(menage_echelle,file=paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/","/Iteration_0/Output/menage_echelle_1_1.RData",sep=""))
# LIBRARY -----------------------------------------------------------------
library(pracma)
library(tidyverse)
setwd("D:/CIRED/Projet_Ademe/MATISSE/")
load(paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/","/Iteration_0/Output/menage_echelle_1_1.RData",sep=""))
load(paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/IMACLIM.RData",sep=""))
load(paste("D:/CIRED/Projet_Ademe/",scenario,"/EMS.RData",sep=""))
load("Step_0_Mise_forme_BDF/Output/menage_forme.RData")
# source("Step_1_Mise_echelle/2.3_emission_gap_2010.R")
# pour gagner du temps :
facteur_dec1 <-  2.201544
facteur_tuu0 <-  3.32953
source("Step_1_Mise_echelle/2.2_fonction_retrocession_carbon_tax.R")
# Taxe carbone totale prélevée aux ménages et rétrocédée
TCO_tot<-as.numeric(IMACLIM %>%
filter(year==horizon) %>%
filter(model=="IMACLIM")%>%
filter(Variable=="TCO_RTCD_tot")%>%
select(value))*10^6
TCO_tot
# Taxe carbone €/tonne CO2eq
TCO<-as.numeric(IMACLIM %>%
filter(year==horizon) %>%
filter(model=="IMACLIM")%>%
filter(Variable=="TCO")%>%
select(value))*10^6
TCO
try(
detach("package:plyr"),
silent=T
)
#TCO par UC => TCO à redistribuer par unité de consommation en moyenne
TCO_tot_UC<-TCO_tot/as.numeric(menage_echelle %>% summarise(sum(pondmen*coeffuc)))
TCO_tot_UC
#RDB total
RDB_tot <- as.numeric(menage_echelle %>% summarise(sum(pondmen*RDB)))
RDB_tot
if(redistribution=="ssrec"){
menage_echelle <-
menage_echelle %>%
mutate(rev_TCO=0)
}
if(redistribution=="forfait"){
# total des UC sur le territoire
sum_pond<-as.numeric(menage_echelle%>%summarise(sum(pondmen*coeffuc)))
menage_echelle <-
menage_echelle %>%
mutate(rev_TCO=coeffuc/sum_pond* TCO_tot)
#vérif
menage_echelle %>% summarise(sum(pondmen*rev_TCO)) # = TCO_tot
}
if(redistribution=="niveau_vie"){ #rétrocession niveau_vie sur rev_tot=RDBAI
#rétrocession niveau_vie sur rev_tot=RDBAI
# => on est bien neutre sur le plan distribution du revenu #rétrocession neutre (et pas la réforme)
#RDB*nombre d'UC dans le pays
RDBAI_UC_tot <- as.numeric(menage_echelle %>% summarise(sum(pondmen*RDBAI/coeffuc)))
menage_echelle <-
menage_echelle %>%
mutate(rev_TCO=RDBAI/coeffuc/RDBAI_UC_tot * TCO_tot)
# menage_echelle %>% summarise(sum(pondmen*rev_TCO))
# menage_echelle %>% summarise(mean(rev_TCO))
TCO_rtcd2<-menage_echelle %>%
group_by(decuc2)%>%
summarise(weighted.mean(x=rev_TCO,w=pondmen,na.rm=T))
TCO_rtcd2 #weighted mean par décile
menage_echelle%>%summarise(sum(pondmen*rev_TCO))-TCO_tot
}
Tab_dec<-
menage_echelle %>%
dplyr::group_by(decuc2)%>%
summarise(sum(pondmen*coeffuc))
Tab_dec
Tab_dec<-Tab_dec%>%mutate(decuc2=as.numeric(decuc2)-1) #pour se rapprocher de la solution avec tuu, on décale les déciles d'un. Le décile 1, devient 0, annule la pente de la régression
Tab_dec
# Emissions agrégées par UC
# Tab_emissions<-menage_forme_2010%>%group_by(decuc2)%>%summarise(sum(pondmen*TCO_paid/coeffuc))
# Tab_dec[i,2]=> la somme des UC sur le décile, on exclut le décile 10. Le décile 1 va toucher une somme égale à sa somme des UC multipliée par le versement par UC du décile 1 défini ci-avant par facteur_dec1 fois TCO_tot_UC, qui est le versement moyen par UC dans toute la pop.
#on épuise l'ensemble de la TCO à rétrocéder (TCO_tot) d'où la racine
x_dec= bisect(function(x) (Tab_dec[1,2]*(1-x)^0+ #décile 1
Tab_dec[2,2]*(1-x)^1+
Tab_dec[3,2]*(1-x)^2+
Tab_dec[4,2]*(1-x)^3+
Tab_dec[5,2]*(1-x)^4+
Tab_dec[6,2]*(1-x)^5+
Tab_dec[7,2]*(1-x)^6+
Tab_dec[8,2]*(1-x)^7+
Tab_dec[9,2]*(1-x)^8)* #décile 9
as.numeric(facteur_dec1*TCO_tot_UC)-TCO_tot,0,1)$root
x_dec
#fonction de distribution avec i le decuc2
distrib<-function(i,coeffuc){
i<-as.double(i)-1  #on translate le decuc2 pour être raccord avec plus haut
ifelse(i==9,return(0),return(coeffuc*((1-x_dec)**i)*as.numeric(TCO_tot_UC*facteur_dec1)))
}
menage_echelle<-
menage_echelle %>%
group_by(1:n())%>% #on groupe ménage par ménage
mutate(rev_TCO=as.numeric(distrib(i=decuc2,coeffuc=as.numeric(coeffuc))))%>%
ungroup()
menage_echelle<-menage_echelle %>% ungroup()
TCO_rtcd2<-menage_echelle %>%
group_by(decuc2)%>%
summarise(weighted.mean(x=rev_TCO,w=pondmen,na.rm=T))
TCO_rtcd2 #weighted mean par décile
TCO_rtcd3<-menage_echelle %>%
group_by(decuc2)%>%
summarise(weighted.mean(x=rev_TCO/coeffuc,w=pondmen,na.rm=T))
TCO_rtcd3 #weighted mean du rev_TCO par uc par décile
#
menage_echelle%>%summarise(sum(pondmen*rev_TCO))-TCO_tot
if(redistribution=="tuu"){
#en tuu on exclut Paris (tuu=9)
Tab_tuu<-
menage_echelle %>%
dplyr::group_by(tuu)%>%
summarise(sum(pondmen*coeffuc))
x_tuu= bisect(function(x) (Tab_tuu[1,2]*(1-x)^0+
Tab_tuu[2,2]*(1-x)^1+
Tab_tuu[3,2]*(1-x)^2+
Tab_tuu[4,2]*(1-x)^3+
Tab_tuu[5,2]*(1-x)^4+
Tab_tuu[6,2]*(1-x)^5+
Tab_tuu[7,2]*(1-x)^6+
Tab_tuu[8,2]*(1-x)^7)*
as.numeric(facteur_tuu0*TCO_tot_UC)-TCO_tot,0,1)$root
# x_tuu=0.490601
distrib<-function(i,coeffuc){
i<-as.double(i)
ifelse(i==8,return(0),return(coeffuc*((1-x_tuu)**i)*as.numeric(TCO_tot_UC*facteur_tuu0)))
}
menage_echelle<-
menage_echelle %>%
group_by(1:n())%>%
mutate(rev_TCO=distrib(tuu,as.numeric(coeffuc)))%>%
ungroup()
menage_echelle<-menage_echelle %>% ungroup()
TCO_rtcd2<-menage_echelle %>%
group_by(tuu)%>%
summarise(weighted.mean(x=rev_TCO,w=pondmen,na.rm=T))
TCO_rtcd2
TCO_rtcd3<-menage_echelle %>%
group_by(tuu)%>%
summarise(weighted.mean(x=rev_TCO/coeffuc,w=pondmen,na.rm=T))
TCO_rtcd3 #weighted mean du rev_TCO par uc par tuu
#
menage_echelle%>%summarise(sum(pondmen*rev_TCO))-TCO_tot
}
menage_echelle$RDB <-
menage_echelle$RDB+
menage_echelle$rev_TCO
save(menage_echelle,file=paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/Iteration_0/Output/menage_echelle_1.RData",sep=""))
Imaclim
IMACLIM
View(IMACLIM %>% filter(year==horizon)%>%filter(model=="IMACLIM"))
IMACLIM %>% filter(year==horizon)%>%filter(model=="IMACLIM")%>%filter(Variable=="IPC1")
scenario="AMS"
horizon=2025
scenario_classement="Optimiste"
redistribution="niveau_vie"
# Import data
# Mise en forme des hypothèses et trajectoires de ThreeME
# Lecture depuis fichier excel, converti en Rdata format long
# Lecture des données IMACLIM
# Output : ThreeME.RData
# LIBRARIES ---------------------------------------------------------------
library(tidyverse)
library(readxl)
setwd("D:/CIRED/Projet_Ademe/")
# ThreeME -----------------------------------------------------------------
# To open Sorties_ThreeME, tab names
if(scenario=="AMS"){S="scen AMS"}
if(scenario=="AME"){S="scen AME"}
if(scenario=="ssTCO"){S="scen AMS ss TCO"}
if(scenario=="ssRES"){S="scen AMS ss residentiel"}
if(scenario=="ssVE"){ S="scen AMS ss VE"}
suppressWarnings(scen<-read_excel(path="D:/CIRED/Projet_Ademe/IMACLIM/Sorties Three-ME.xlsx",sheet=S))
ThreeME<- scen %>% select(-Def)%>% gather(key=year, value=value, -c(1))
save(ThreeME, file=paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/Iteration_0/Input/ThreeME.RData",sep=""))
# IMACLIM -----------------------------------------------------------------
# VARIABLES MACRO
if(scenario_classement=="ssrec"){
output_macro<-read_excel(path ="IMACLIM/Output_macro_code_iter_0_ssrec.xlsx",sheet=scenario,skip = 1)
} else {
output_macro<-read_excel(path ="IMACLIM/Output_macro_code_iter_0.xlsx",sheet=scenario,skip = 1)
}
output_macro <-
output_macro %>%
gather(key=year_model,value=value,-c(1:3))
IMACLIM<-
output_macro  %>%
separate(col="year_model",into=c("year","model"),sep="_")
rm(output_macro)
save(IMACLIM,file=
paste(scenario,"/",horizon,"/IMACLIM.RData",sep=""))
# Facteur_croissance_2010_horizon -----------------------------------------
FC <-
IMACLIM %>%
filter(year==horizon) %>%
filter(model=="IMACLIM")%>%
filter(Variable %in% c("revact",
"revpat",
"revchom",
"revsoc",
"revetranger",
"rdb",
"tauIR",
"tauAID",
"A01",
"A02",
"A03",
"A04",
"A05",
"A06",
"A07",
"A08",
"A09",
"A10",
"A11",
"A12",
"A13",
"A14")) %>%
select(Variable,value)
FC <- FC %>%
mutate(value=as.numeric(value)) %>%
spread(key=Variable,value=value)
save(FC,file=paste(scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/","Iteration_0/Input/FC_2010_",horizon,".RData",sep=""))
# Emissions ---------------------------------------------------------------
EMS<-read_excel(path=paste("IMACLIM/EMS.xlsx",sep=""),range=paste(scenario,"!B1:AF5",sep=""),col_names=T)
save(EMS,file=paste(scenario,"/EMS.RData",sep=""))
# SUCCESS -----------------------------------------------------------------
print("Step 1 : 0_import_data_macro : SUCCESS")
# LIBRARY -----------------------------------------------------------------
library(tidyverse)
# DATA --------------------------------------------------------------------
## MICRO
setwd("D:/CIRED/Projet_Ademe/MATISSE")
source("D:/CIRED/Projet_Ademe/Code_global_Ademe/mutate_when.R")
load("Step_0_Mise_forme_BDF/Output/menage_forme.RData")
source("Step_1_Mise_echelle/1.2_fonction_mise_echelle_revenus.R")
# source("Step_5_Export_IMACLIM/compute_savings_share_enermix.R")
## MACRO
load(paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/IMACLIM.RData",sep=""))
load(paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/","Iteration_0/Input/FC_2010_",horizon,".RData",sep=""))
load(paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/Iteration_0/Input/ThreeME.RData",sep=""))
# Appel Fonction  ---------------------------------------------------------
Iter=0
menage_echelle <- mise_echelle_revenu(FC,menage_forme,Iter)
###
# TEST
###
#'
#'
#' #Cas particulier des ménages 2548 et 10828 qui ont des NaN en AID, IR et donc en RDB
#' menage_echelle <-
#'   menage_echelle %>%
#'   mutate_when(RDBAI==0,list(RDB=0))
#' # cas Particulier du ménage 8234 qui paie 88% de son RDBAI en impôt en 2010, et 97% en 2035.Mise à zéro du RDB par commodité contre -3783 sinon.
#'
#'
#' vérif pour quoi <0 ?
#'
#'
#' menage_echelle <-
#'   menage_echelle %>%
#'   mutate_when(ident_men==8234,list(RDB=0))
# Save files --------------------------------------------------------------
save(menage_echelle,file=paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/","/Iteration_0/Output/menage_echelle_1_1.RData",sep=""))
# Next Step ---------------------------------------------------------------
# Rétrocession de la taxe carbone
# SUCCESS -----------------------------------------------------------------
print("Step 1 : 1_Mise_echelle_revenus : SUCCESS")
# LIBRARY -----------------------------------------------------------------
library(pracma)
library(tidyverse)
setwd("D:/CIRED/Projet_Ademe/MATISSE/")
# DATA --------------------------------------------------------------------
load(paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/","/Iteration_0/Output/menage_echelle_1_1.RData",sep=""))
load(paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/IMACLIM.RData",sep=""))
load(paste("D:/CIRED/Projet_Ademe/",scenario,"/EMS.RData",sep=""))
load("Step_0_Mise_forme_BDF/Output/menage_forme.RData")
# source("Step_1_Mise_echelle/2.3_emission_gap_2010.R")
# pour gagner du temps :
facteur_dec1 <-  2.201544
facteur_tuu0 <-  3.32953
source("Step_1_Mise_echelle/2.2_fonction_retrocession_carbon_tax.R")
# Taxe Carbone ------------------------------------------------------------
# Taxe carbone totale prélevée aux ménages et rétrocédée
TCO_tot<-as.numeric(IMACLIM %>%
filter(year==horizon) %>%
filter(model=="IMACLIM")%>%
filter(Variable=="TCO_RTCD_tot")%>%
select(value))*10^6
# Taxe carbone €/tonne CO2eq
TCO<-as.numeric(IMACLIM %>%
filter(year==horizon) %>%
filter(model=="IMACLIM")%>%
filter(Variable=="TCO")%>%
select(value))*10^6
# Appel Fonction ----------------------------------------------------------
menage_echelle <- retrocession_carbon_tax(TCO,TCO_tot,menage_echelle)
# Save --------------------------------------------------------------------
save(menage_echelle,file=paste("D:/CIRED/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/Iteration_0/Output/menage_echelle_1.RData",sep=""))
# Success -----------------------------------------------------------------
print("Step 1 : 2_retrocession_carbon_tax : SUCCESS")
Tab_tuu
Tab_tuu<-
menage_echelle %>%
dplyr::group_by(tuu)%>%
summarise(sum(pondmen*coeffuc))
library(tidyverse)
Tab_tuu<-
menage_echelle %>%
dplyr::group_by(tuu)%>%
summarise(sum(pondmen*coeffuc))
Tab_tuu
library(tidyverse)
menage_forme %>% group_by(DPE_pred)%>%summarise("mean_DPE_ener"=sum(Gaz_ECS+Gaz_chauff+Elec_clim+Elec_ECS+Elec_chauff+GPL_ECS+GPL_chauff+Solides_ECS+Solides_chauff+Fuel_ECS+Fuel_chauff)/sum(surfhab_d))
## MICRO
setwd("D:/CIRED/Projet_Ademe/MATISSE")
load("Step_0_Mise_forme_BDF/Output/menage_forme.RData")
colnames(menage_forme)
try(
detach("package:plyr"),
silent=T
)
#TCO par UC => TCO à redistribuer par unité de consommation en moyenne
TCO_tot_UC<-TCO_tot/as.numeric(menage_echelle %>% summarise(sum(pondmen*coeffuc)))
#RDB total
RDB_tot <- as.numeric(menage_echelle %>% summarise(sum(pondmen*RDB)))
# LIBRARY -----------------------------------------------------------------
library(pracma)
library(tidyverse)
setwd("D:/Stage_Petiteville/Projet_Ademe/MATISSE/")
# DATA --------------------------------------------------------------------
load(paste("D:/Stage_Petiteville/Projet_Ademe/",scenario,"/",horizon,"/",scenario_classement,"/",redistribution,"/","/Iteration_0/Output/menage_echelle_1_1.RData",sep=""))
load(paste("D:/Stage_Petiteville/Projet_Ademe/",scenario,"/",horizon,"/IMACLIM.RData",sep=""))
load(paste("D:/Stage_Petiteville/Projet_Ademe/",scenario,"/EMS.RData",sep=""))
load("Step_0_Mise_forme_BDF/Output/menage_forme.RData")
# source("Step_1_Mise_echelle/2.3_emission_gap_2010.R")
# pour gagner du temps :
facteur_dec1 <-  2.201544
facteur_tuu0 <-  3.32953
# Taxe Carbone ------------------------------------------------------------
# Taxe carbone totale prélevée aux ménages et rétrocédée
TCO_tot<-as.numeric(IMACLIM %>%
filter(year==horizon) %>%
filter(model=="IMACLIM")%>%
filter(Variable=="TCO_RTCD_tot")%>%
select(value))*10^6
# Taxe carbone €/tonne CO2eq
TCO<-as.numeric(IMACLIM %>%
filter(year==horizon) %>%
filter(model=="IMACLIM")%>%
filter(Variable=="TCO")%>%
select(value))*10^6
head(menage_echelle)
try(
detach("package:plyr"),
silent=T
)
#TCO par UC => TCO à redistribuer par unité de consommation en moyenne
TCO_tot_UC<-TCO_tot/as.numeric(menage_echelle %>% summarise(sum(pondmen*coeffuc)))
#RDB total
RDB_tot <- as.numeric(menage_echelle %>% summarise(sum(pondmen*RDB)))
head(TCO_tot_UC)
#RDB total
RDB_tot <- as.numeric(menage_echelle %>% summarise(sum(pondmen*RDB)))
RDB_tot
if(redistribution=="ssrec"){
menage_echelle <-
menage_echelle %>%
mutate(rev_TCO=0)
}
menage_echelle$rev_TCO
redistribution
TCO_tot
TCO
coeffuc
menage_echelle$coeffuc
menage_echelle$sum_pond
# total des UC sur le territoire
sum_pond<-as.numeric(menage_echelle%>%summarise(sum(pondmen*coeffuc)))
#RDB*nombre d'UC dans le pays
RDBAI_UC_tot <- as.numeric(menage_echelle %>% summarise(sum(pondmen*RDBAI/coeffuc)))
RDBAI_UC_tot
TCO_rtcd2<-menage_echelle %>%
group_by(decuc2)%>%
summarise(weighted.mean(x=rev_TCO,w=pondmen,na.rm=T))
TCO_rtcd2
#rétrocession niveau_vie sur rev_tot=RDBAI
# => on est bien neutre sur le plan distribution du revenu #rétrocession neutre (et pas la réforme)
#RDB*nombre d'UC dans le pays
RDBAI_UC_tot <- as.numeric(menage_echelle %>% summarise(sum(pondmen*RDBAI/coeffuc)))
menage_echelle <-
menage_echelle %>%
mutate(rev_TCO=RDBAI/coeffuc/RDBAI_UC_tot * TCO_tot)
# menage_echelle %>% summarise(sum(pondmen*rev_TCO))
# menage_echelle %>% summarise(mean(rev_TCO))
TCO_rtcd2<-menage_echelle %>%
group_by(decuc2)%>%
summarise(weighted.mean(x=rev_TCO,w=pondmen,na.rm=T))
TCO_rtcd2 #weighted mean par décile
menage_echelle%>%summarise(sum(pondmen*rev_TCO))-TCO_tot
Tab_dec<-
menage_echelle %>%
dplyr::group_by(decuc2)%>%
summarise(sum(pondmen*coeffuc))
Tab_dec<-Tab_dec%>%mutate(decuc2=as.numeric(decuc2)-1) #pour se rapprocher de la solution avec tuu, on décale les déciles d'un. Le décile 1, devient 0, annule la pente de la régression
head(Tab_dec)
menage_echelle$decuc2
# Emissions agrégées par UC
# Tab_emissions<-menage_forme_2010%>%group_by(decuc2)%>%summarise(sum(pondmen*TCO_paid/coeffuc))
# Tab_dec[i,2]=> la somme des UC sur le décile, on exclut le décile 10. Le décile 1 va toucher une somme égale à sa somme des UC multipliée par le versement par UC du décile 1 défini ci-avant par facteur_dec1 fois TCO_tot_UC, qui est le versement moyen par UC dans toute la pop.
#on épuise l'ensemble de la TCO à rétrocéder (TCO_tot) d'où la racine
x_dec= bisect(function(x) (Tab_dec[1,2]*(1-x)^0+ #décile 1
Tab_dec[2,2]*(1-x)^1+
Tab_dec[3,2]*(1-x)^2+
Tab_dec[4,2]*(1-x)^3+
Tab_dec[5,2]*(1-x)^4+
Tab_dec[6,2]*(1-x)^5+
Tab_dec[7,2]*(1-x)^6+
Tab_dec[8,2]*(1-x)^7+
Tab_dec[9,2]*(1-x)^8)* #décile 9
as.numeric(facteur_dec1*TCO_tot_UC)-TCO_tot,0,1)$root
# x_dec=0.1825126
x_dec
Tab_emissions<-menage_forme_2010%>%group_by(decuc2)%>%summarise(sum(pondmen*TCO_paid/coeffuc))
#fonction de distribution avec i le decuc2
distrib<-function(i,coeffuc){
i<-as.double(i)-1  #on translate le decuc2 pour être raccord avec plus haut
ifelse(i==9,return(0),return(coeffuc*((1-x_dec)**i)*as.numeric(TCO_tot_UC*facteur_dec1)))
}
distrib
menage_echelle<-
menage_echelle %>%
group_by(1:n())%>% #on groupe ménage par ménage
mutate(rev_TCO=as.numeric(distrib(i=decuc2,coeffuc=as.numeric(coeffuc))))%>%
ungroup()
menage_echelle
distrib(i=decuc2,coeffuc=as.numeric(coeffuc)))
?bisect
Tab_dec[1,2]*(1-x)^0+ #décile 1
Tab_dec[2,2]*(1-x)^1+
Tab_dec[3,2]*(1-x)^2+
Tab_dec[4,2]*(1-x)^3+
Tab_dec[5,2]*(1-x)^4+
Tab_dec[6,2]*(1-x)^5+
Tab_dec[7,2]*(1-x)^6+
Tab_dec[8,2]*(1-x)^7+
Tab_dec[9,2]*(1-x)^8
Tab_dec
bisect(function(x) (Tab_dec[1,2]*(1-x)^0+ #décile 1
Tab_dec[2,2]*(1-x)^1+
Tab_dec[3,2]*(1-x)^2+
Tab_dec[4,2]*(1-x)^3+
Tab_dec[5,2]*(1-x)^4+
Tab_dec[6,2]*(1-x)^5+
Tab_dec[7,2]*(1-x)^6+
Tab_dec[8,2]*(1-x)^7+
Tab_dec[9,2]*(1-x)^8)* #décile 9
as.numeric(facteur_dec1*TCO_tot_UC)-TCO_tot,0,1)
facteur_dec1
Tab_tuu<-
menage_echelle %>%
dplyr::group_by(tuu)%>%
summarise(sum(pondmen*coeffuc))
x_tuu= bisect(function(x) (Tab_tuu[1,2]*(1-x)^0+
Tab_tuu[2,2]*(1-x)^1+
Tab_tuu[3,2]*(1-x)^2+
Tab_tuu[4,2]*(1-x)^3+
Tab_tuu[5,2]*(1-x)^4+
Tab_tuu[6,2]*(1-x)^5+
Tab_tuu[7,2]*(1-x)^6+
Tab_tuu[8,2]*(1-x)^7)*
as.numeric(facteur_tuu0*TCO_tot_UC)-TCO_tot,0,1)$root
# x_tuu=0.490601
distrib<-function(i,coeffuc){
i<-as.double(i)
ifelse(i==8,return(0),return(coeffuc*((1-x_tuu)**i)*as.numeric(TCO_tot_UC*facteur_tuu0)))
}
menage_echelle<-
menage_echelle %>%
group_by(1:n())%>%
mutate(rev_TCO=distrib(tuu,as.numeric(coeffuc)))%>%
ungroup()
menage_echelle<-menage_echelle %>% ungroup()
TCO_rtcd2<-menage_echelle %>%
group_by(tuu)%>%
summarise(weighted.mean(x=rev_TCO,w=pondmen,na.rm=T))
TCO_rtcd2
TCO_rtcd3<-menage_echelle %>%
group_by(tuu)%>%
summarise(weighted.mean(x=rev_TCO/coeffuc,w=pondmen,na.rm=T))
TCO_rtcd3 #weighted mean du rev_TCO par uc par tuu
#
menage_echelle%>%summarise(sum(pondmen*rev_TCO))-TCO_tot
Tab_tuu
menage_echelle$tuu
facteur_tuu0
